// Code generated by protoc-gen-go. DO NOT EDIT.
// source: republique.proto

package republique

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Arm int32

const (
	Arm_SUPPORT   Arm = 0
	Arm_INFANTRY  Arm = 1
	Arm_CAVALRY   Arm = 2
	Arm_ARTILLERY Arm = 3
	Arm_COMMAND   Arm = 4
)

var Arm_name = map[int32]string{
	0: "SUPPORT",
	1: "INFANTRY",
	2: "CAVALRY",
	3: "ARTILLERY",
	4: "COMMAND",
}

var Arm_value = map[string]int32{
	"SUPPORT":   0,
	"INFANTRY":  1,
	"CAVALRY":   2,
	"ARTILLERY": 3,
	"COMMAND":   4,
}

func (x Arm) String() string {
	return proto.EnumName(Arm_name, int32(x))
}

func (Arm) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{0}
}

type UnitType int32

const (
	UnitType_SUPPORT_UNIT          UnitType = 0
	UnitType_INFANTRY_LINE         UnitType = 1
	UnitType_INFANTRY_LIGHT        UnitType = 2
	UnitType_INFANTRY_GRENADIER    UnitType = 3
	UnitType_INFANTRY_IRREGULAR    UnitType = 4
	UnitType_INFANTRY_RIFLES       UnitType = 5
	UnitType_CAVALRY_LIGHT         UnitType = 6
	UnitType_CAVALRY_HUSSAR        UnitType = 7
	UnitType_CAVALRY_DRAGOON       UnitType = 8
	UnitType_CAVALRY_CUIRASSIER    UnitType = 9
	UnitType_CAVALRY_COSSACK       UnitType = 10
	UnitType_CAVALRY_HEAVY         UnitType = 11
	UnitType_CAVALRY_MEDIUM        UnitType = 12
	UnitType_CAVALRY_LANCER        UnitType = 13
	UnitType_ARTILLERY_BN          UnitType = 14
	UnitType_ARTILLERY_LIGHT       UnitType = 15
	UnitType_ARTILLERY_MEDIUM      UnitType = 16
	UnitType_ARTILLERY_HEAVY       UnitType = 17
	UnitType_ARTILLERY_HORSE       UnitType = 18
	UnitType_ARTILLERY_LIGHT_HORSE UnitType = 19
)

var UnitType_name = map[int32]string{
	0:  "SUPPORT_UNIT",
	1:  "INFANTRY_LINE",
	2:  "INFANTRY_LIGHT",
	3:  "INFANTRY_GRENADIER",
	4:  "INFANTRY_IRREGULAR",
	5:  "INFANTRY_RIFLES",
	6:  "CAVALRY_LIGHT",
	7:  "CAVALRY_HUSSAR",
	8:  "CAVALRY_DRAGOON",
	9:  "CAVALRY_CUIRASSIER",
	10: "CAVALRY_COSSACK",
	11: "CAVALRY_HEAVY",
	12: "CAVALRY_MEDIUM",
	13: "CAVALRY_LANCER",
	14: "ARTILLERY_BN",
	15: "ARTILLERY_LIGHT",
	16: "ARTILLERY_MEDIUM",
	17: "ARTILLERY_HEAVY",
	18: "ARTILLERY_HORSE",
	19: "ARTILLERY_LIGHT_HORSE",
}

var UnitType_value = map[string]int32{
	"SUPPORT_UNIT":          0,
	"INFANTRY_LINE":         1,
	"INFANTRY_LIGHT":        2,
	"INFANTRY_GRENADIER":    3,
	"INFANTRY_IRREGULAR":    4,
	"INFANTRY_RIFLES":       5,
	"CAVALRY_LIGHT":         6,
	"CAVALRY_HUSSAR":        7,
	"CAVALRY_DRAGOON":       8,
	"CAVALRY_CUIRASSIER":    9,
	"CAVALRY_COSSACK":       10,
	"CAVALRY_HEAVY":         11,
	"CAVALRY_MEDIUM":        12,
	"CAVALRY_LANCER":        13,
	"ARTILLERY_BN":          14,
	"ARTILLERY_LIGHT":       15,
	"ARTILLERY_MEDIUM":      16,
	"ARTILLERY_HEAVY":       17,
	"ARTILLERY_HORSE":       18,
	"ARTILLERY_LIGHT_HORSE": 19,
}

func (x UnitType) String() string {
	return proto.EnumName(UnitType_name, int32(x))
}

func (UnitType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{1}
}

type UnitGrade int32

const (
	UnitGrade_CIVILIAN  UnitGrade = 0
	UnitGrade_MILITIA   UnitGrade = 1
	UnitGrade_CONSCRIPT UnitGrade = 2
	UnitGrade_REGULAR   UnitGrade = 3
	UnitGrade_VETERAN   UnitGrade = 4
	UnitGrade_ELITE     UnitGrade = 5
	UnitGrade_GUARD     UnitGrade = 6
)

var UnitGrade_name = map[int32]string{
	0: "CIVILIAN",
	1: "MILITIA",
	2: "CONSCRIPT",
	3: "REGULAR",
	4: "VETERAN",
	5: "ELITE",
	6: "GUARD",
}

var UnitGrade_value = map[string]int32{
	"CIVILIAN":  0,
	"MILITIA":   1,
	"CONSCRIPT": 2,
	"REGULAR":   3,
	"VETERAN":   4,
	"ELITE":     5,
	"GUARD":     6,
}

func (x UnitGrade) String() string {
	return proto.EnumName(UnitGrade_name, int32(x))
}

func (UnitGrade) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{2}
}

type MoraleState int32

const (
	MoraleState_RESTING     MoraleState = 0
	MoraleState_GOOD        MoraleState = 1
	MoraleState_UNFORMED    MoraleState = 2
	MoraleState_RATTLED     MoraleState = 3
	MoraleState_SHAKEN      MoraleState = 4
	MoraleState_DEMORALISED MoraleState = 5
)

var MoraleState_name = map[int32]string{
	0: "RESTING",
	1: "GOOD",
	2: "UNFORMED",
	3: "RATTLED",
	4: "SHAKEN",
	5: "DEMORALISED",
}

var MoraleState_value = map[string]int32{
	"RESTING":     0,
	"GOOD":        1,
	"UNFORMED":    2,
	"RATTLED":     3,
	"SHAKEN":      4,
	"DEMORALISED": 5,
}

func (x MoraleState) String() string {
	return proto.EnumName(MoraleState_name, int32(x))
}

func (MoraleState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{3}
}

type Formation int32

const (
	Formation_RESERVE          Formation = 0
	Formation_MARCH_COLUMN     Formation = 1
	Formation_ATTACK_COLUMN    Formation = 2
	Formation_LINE             Formation = 3
	Formation_ECHELON          Formation = 4
	Formation_SUPPORTING_LINES Formation = 5
	Formation_DEBANDE          Formation = 6
	Formation_FORTIFIED        Formation = 7
)

var Formation_name = map[int32]string{
	0: "RESERVE",
	1: "MARCH_COLUMN",
	2: "ATTACK_COLUMN",
	3: "LINE",
	4: "ECHELON",
	5: "SUPPORTING_LINES",
	6: "DEBANDE",
	7: "FORTIFIED",
}

var Formation_value = map[string]int32{
	"RESERVE":          0,
	"MARCH_COLUMN":     1,
	"ATTACK_COLUMN":    2,
	"LINE":             3,
	"ECHELON":          4,
	"SUPPORTING_LINES": 5,
	"DEBANDE":          6,
	"FORTIFIED":        7,
}

func (x Formation) String() string {
	return proto.EnumName(Formation_name, int32(x))
}

func (Formation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{4}
}

type Rank int32

const (
	Rank_BATTALION       Rank = 0
	Rank_BRIGADE         Rank = 1
	Rank_DIVISION        Rank = 2
	Rank_CORPS           Rank = 3
	Rank_WING            Rank = 4
	Rank_ARMY            Rank = 5
	Rank_NATIONAL_LEADER Rank = 6
	Rank_ARTILLERY_DIV   Rank = 7
	Rank_CAVALRY_BDE     Rank = 8
	Rank_CAVALRY_DIV     Rank = 9
	Rank_BATTERY         Rank = 10
	Rank_GUN_PARK        Rank = 11
)

var Rank_name = map[int32]string{
	0:  "BATTALION",
	1:  "BRIGADE",
	2:  "DIVISION",
	3:  "CORPS",
	4:  "WING",
	5:  "ARMY",
	6:  "NATIONAL_LEADER",
	7:  "ARTILLERY_DIV",
	8:  "CAVALRY_BDE",
	9:  "CAVALRY_DIV",
	10: "BATTERY",
	11: "GUN_PARK",
}

var Rank_value = map[string]int32{
	"BATTALION":       0,
	"BRIGADE":         1,
	"DIVISION":        2,
	"CORPS":           3,
	"WING":            4,
	"ARMY":            5,
	"NATIONAL_LEADER": 6,
	"ARTILLERY_DIV":   7,
	"CAVALRY_BDE":     8,
	"CAVALRY_DIV":     9,
	"BATTERY":         10,
	"GUN_PARK":        11,
}

func (x Rank) String() string {
	return proto.EnumName(Rank_name, int32(x))
}

func (Rank) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{5}
}

type SkirmishRating int32

const (
	SkirmishRating_POOR       SkirmishRating = 0
	SkirmishRating_ADEQUATE   SkirmishRating = 1
	SkirmishRating_CRACK_SHOT SkirmishRating = 2
	SkirmishRating_EXCELLENT  SkirmishRating = 3
)

var SkirmishRating_name = map[int32]string{
	0: "POOR",
	1: "ADEQUATE",
	2: "CRACK_SHOT",
	3: "EXCELLENT",
}

var SkirmishRating_value = map[string]int32{
	"POOR":       0,
	"ADEQUATE":   1,
	"CRACK_SHOT": 2,
	"EXCELLENT":  3,
}

func (x SkirmishRating) String() string {
	return proto.EnumName(SkirmishRating_name, int32(x))
}

func (SkirmishRating) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{6}
}

type CommandRating int32

const (
	CommandRating_USELESS    CommandRating = 0
	CommandRating_CUMBERSOME CommandRating = 1
	CommandRating_FUNCTIONAL CommandRating = 2
	CommandRating_EFFICIENT  CommandRating = 3
)

var CommandRating_name = map[int32]string{
	0: "USELESS",
	1: "CUMBERSOME",
	2: "FUNCTIONAL",
	3: "EFFICIENT",
}

var CommandRating_value = map[string]int32{
	"USELESS":    0,
	"CUMBERSOME": 1,
	"FUNCTIONAL": 2,
	"EFFICIENT":  3,
}

func (x CommandRating) String() string {
	return proto.EnumName(CommandRating_name, int32(x))
}

func (CommandRating) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{7}
}

type Order int32

const (
	Order_RESTAGE  Order = 0
	Order_MARCH    Order = 1
	Order_MOVE     Order = 2
	Order_DEFEND   Order = 3
	Order_WITHDRAW Order = 4
	Order_ATTACK   Order = 5
	Order_RALLY    Order = 6
)

var Order_name = map[int32]string{
	0: "RESTAGE",
	1: "MARCH",
	2: "MOVE",
	3: "DEFEND",
	4: "WITHDRAW",
	5: "ATTACK",
	6: "RALLY",
}

var Order_value = map[string]int32{
	"RESTAGE":  0,
	"MARCH":    1,
	"MOVE":     2,
	"DEFEND":   3,
	"WITHDRAW": 4,
	"ATTACK":   5,
	"RALLY":    6,
}

func (x Order) String() string {
	return proto.EnumName(Order_name, int32(x))
}

func (Order) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{8}
}

type Nationality int32

const (
	Nationality_ANY_NATION   Nationality = 0
	Nationality_FRENCH       Nationality = 1
	Nationality_BRITISH      Nationality = 2
	Nationality_RUSSIAN      Nationality = 3
	Nationality_PRUSSIAN     Nationality = 4
	Nationality_SPANISH      Nationality = 6
	Nationality_OTTOMAN      Nationality = 7
	Nationality_PERSIAN      Nationality = 8
	Nationality_AUSTRIAN     Nationality = 9
	Nationality_AMERICAN     Nationality = 10
	Nationality_INDIAN       Nationality = 11
	Nationality_ITALIAN      Nationality = 12
	Nationality_BAVARIAN     Nationality = 13
	Nationality_DUTCH        Nationality = 14
	Nationality_BELGIAN      Nationality = 15
	Nationality_NASSAU       Nationality = 16
	Nationality_SWISS        Nationality = 17
	Nationality_PAPAL_STATES Nationality = 18
	Nationality_AFRICAN      Nationality = 19
	Nationality_NATIVE       Nationality = 20
	Nationality_COLONIAL     Nationality = 21
	Nationality_SWEDEN       Nationality = 22
)

var Nationality_name = map[int32]string{
	0:  "ANY_NATION",
	1:  "FRENCH",
	2:  "BRITISH",
	3:  "RUSSIAN",
	4:  "PRUSSIAN",
	6:  "SPANISH",
	7:  "OTTOMAN",
	8:  "PERSIAN",
	9:  "AUSTRIAN",
	10: "AMERICAN",
	11: "INDIAN",
	12: "ITALIAN",
	13: "BAVARIAN",
	14: "DUTCH",
	15: "BELGIAN",
	16: "NASSAU",
	17: "SWISS",
	18: "PAPAL_STATES",
	19: "AFRICAN",
	20: "NATIVE",
	21: "COLONIAL",
	22: "SWEDEN",
}

var Nationality_value = map[string]int32{
	"ANY_NATION":   0,
	"FRENCH":       1,
	"BRITISH":      2,
	"RUSSIAN":      3,
	"PRUSSIAN":     4,
	"SPANISH":      6,
	"OTTOMAN":      7,
	"PERSIAN":      8,
	"AUSTRIAN":     9,
	"AMERICAN":     10,
	"INDIAN":       11,
	"ITALIAN":      12,
	"BAVARIAN":     13,
	"DUTCH":        14,
	"BELGIAN":      15,
	"NASSAU":       16,
	"SWISS":        17,
	"PAPAL_STATES": 18,
	"AFRICAN":      19,
	"NATIVE":       20,
	"COLONIAL":     21,
	"SWEDEN":       22,
}

func (x Nationality) String() string {
	return proto.EnumName(Nationality_name, int32(x))
}

func (Nationality) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{9}
}

type Drill int32

const (
	Drill_LINEAR Drill = 0
	Drill_MASSED Drill = 1
	Drill_RAPID  Drill = 2
)

var Drill_name = map[int32]string{
	0: "LINEAR",
	1: "MASSED",
	2: "RAPID",
}

var Drill_value = map[string]int32{
	"LINEAR": 0,
	"MASSED": 1,
	"RAPID":  2,
}

func (x Drill) String() string {
	return proto.EnumName(Drill_name, int32(x))
}

func (Drill) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{10}
}

type BattlefieldPosition int32

const (
	BattlefieldPosition_REAR   BattlefieldPosition = 0
	BattlefieldPosition_LEFT   BattlefieldPosition = 1
	BattlefieldPosition_CENTRE BattlefieldPosition = 2
	BattlefieldPosition_RIGHT  BattlefieldPosition = 3
)

var BattlefieldPosition_name = map[int32]string{
	0: "REAR",
	1: "LEFT",
	2: "CENTRE",
	3: "RIGHT",
}

var BattlefieldPosition_value = map[string]int32{
	"REAR":   0,
	"LEFT":   1,
	"CENTRE": 2,
	"RIGHT":  3,
}

func (x BattlefieldPosition) String() string {
	return proto.EnumName(BattlefieldPosition_name, int32(x))
}

func (BattlefieldPosition) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{11}
}

type Phase int32

const (
	Phase_PREGAME   Phase = 0
	Phase_LEADERS   Phase = 1
	Phase_MOVEMENT1 Phase = 2
	Phase_FIRING1   Phase = 3
	Phase_ASSAULT1  Phase = 4
	Phase_PANIC1    Phase = 5
	Phase_MOVEMENT2 Phase = 6
	Phase_FIRING2   Phase = 7
	Phase_ASSAULT2  Phase = 8
	Phase_PANIC2    Phase = 9
)

var Phase_name = map[int32]string{
	0: "PREGAME",
	1: "LEADERS",
	2: "MOVEMENT1",
	3: "FIRING1",
	4: "ASSAULT1",
	5: "PANIC1",
	6: "MOVEMENT2",
	7: "FIRING2",
	8: "ASSAULT2",
	9: "PANIC2",
}

var Phase_value = map[string]int32{
	"PREGAME":   0,
	"LEADERS":   1,
	"MOVEMENT1": 2,
	"FIRING1":   3,
	"ASSAULT1":  4,
	"PANIC1":    5,
	"MOVEMENT2": 6,
	"FIRING2":   7,
	"ASSAULT2":  8,
	"PANIC2":    9,
}

func (x Phase) String() string {
	return proto.EnumName(Phase_name, int32(x))
}

func (Phase) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{12}
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Messages
type StringMessage struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringMessage) Reset()         { *m = StringMessage{} }
func (m *StringMessage) String() string { return proto.CompactTextString(m) }
func (*StringMessage) ProtoMessage()    {}
func (*StringMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{0}
}

func (m *StringMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringMessage.Unmarshal(m, b)
}
func (m *StringMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringMessage.Marshal(b, m, deterministic)
}
func (m *StringMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringMessage.Merge(m, src)
}
func (m *StringMessage) XXX_Size() int {
	return xxx_messageInfo_StringMessage.Size(m)
}
func (m *StringMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_StringMessage.DiscardUnknown(m)
}

var xxx_messageInfo_StringMessage proto.InternalMessageInfo

func (m *StringMessage) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type EmptyMessage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyMessage) Reset()         { *m = EmptyMessage{} }
func (m *EmptyMessage) String() string { return proto.CompactTextString(m) }
func (*EmptyMessage) ProtoMessage()    {}
func (*EmptyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{1}
}

func (m *EmptyMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyMessage.Unmarshal(m, b)
}
func (m *EmptyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyMessage.Marshal(b, m, deterministic)
}
func (m *EmptyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyMessage.Merge(m, src)
}
func (m *EmptyMessage) XXX_Size() int {
	return xxx_messageInfo_EmptyMessage.Size(m)
}
func (m *EmptyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyMessage proto.InternalMessageInfo

type TokenMessage struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenMessage) Reset()         { *m = TokenMessage{} }
func (m *TokenMessage) String() string { return proto.CompactTextString(m) }
func (*TokenMessage) ProtoMessage()    {}
func (*TokenMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{2}
}

func (m *TokenMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenMessage.Unmarshal(m, b)
}
func (m *TokenMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenMessage.Marshal(b, m, deterministic)
}
func (m *TokenMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenMessage.Merge(m, src)
}
func (m *TokenMessage) XXX_Size() int {
	return xxx_messageInfo_TokenMessage.Size(m)
}
func (m *TokenMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TokenMessage proto.InternalMessageInfo

func (m *TokenMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GameTimeResponse struct {
	Phase                Phase                `protobuf:"varint,1,opt,name=phase,proto3,enum=republique.Phase" json:"phase,omitempty"`
	GameTime             *timestamp.Timestamp `protobuf:"bytes,2,opt,name=gameTime,proto3" json:"gameTime,omitempty"`
	StopWatch            int64                `protobuf:"varint,3,opt,name=stopWatch,proto3" json:"stopWatch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GameTimeResponse) Reset()         { *m = GameTimeResponse{} }
func (m *GameTimeResponse) String() string { return proto.CompactTextString(m) }
func (*GameTimeResponse) ProtoMessage()    {}
func (*GameTimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{3}
}

func (m *GameTimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameTimeResponse.Unmarshal(m, b)
}
func (m *GameTimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameTimeResponse.Marshal(b, m, deterministic)
}
func (m *GameTimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameTimeResponse.Merge(m, src)
}
func (m *GameTimeResponse) XXX_Size() int {
	return xxx_messageInfo_GameTimeResponse.Size(m)
}
func (m *GameTimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GameTimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GameTimeResponse proto.InternalMessageInfo

func (m *GameTimeResponse) GetPhase() Phase {
	if m != nil {
		return m.Phase
	}
	return Phase_PREGAME
}

func (m *GameTimeResponse) GetGameTime() *timestamp.Timestamp {
	if m != nil {
		return m.GameTime
	}
	return nil
}

func (m *GameTimeResponse) GetStopWatch() int64 {
	if m != nil {
		return m.StopWatch
	}
	return 0
}

type LoginMessage struct {
	TeamCode             string   `protobuf:"bytes,2,opt,name=teamCode,proto3" json:"teamCode,omitempty"`
	PlayerCode           string   `protobuf:"bytes,3,opt,name=playerCode,proto3" json:"playerCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginMessage) Reset()         { *m = LoginMessage{} }
func (m *LoginMessage) String() string { return proto.CompactTextString(m) }
func (*LoginMessage) ProtoMessage()    {}
func (*LoginMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{4}
}

func (m *LoginMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginMessage.Unmarshal(m, b)
}
func (m *LoginMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginMessage.Marshal(b, m, deterministic)
}
func (m *LoginMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginMessage.Merge(m, src)
}
func (m *LoginMessage) XXX_Size() int {
	return xxx_messageInfo_LoginMessage.Size(m)
}
func (m *LoginMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginMessage.DiscardUnknown(m)
}

var xxx_messageInfo_LoginMessage proto.InternalMessageInfo

func (m *LoginMessage) GetTeamCode() string {
	if m != nil {
		return m.TeamCode
	}
	return ""
}

func (m *LoginMessage) GetPlayerCode() string {
	if m != nil {
		return m.PlayerCode
	}
	return ""
}

type LoginResponse struct {
	Welcome              string               `protobuf:"bytes,2,opt,name=welcome,proto3" json:"welcome,omitempty"`
	Commanders           []string             `protobuf:"bytes,3,rep,name=commanders,proto3" json:"commanders,omitempty"`
	TeamName             string               `protobuf:"bytes,4,opt,name=teamName,proto3" json:"teamName,omitempty"`
	Briefing             string               `protobuf:"bytes,5,opt,name=briefing,proto3" json:"briefing,omitempty"`
	GameName             string               `protobuf:"bytes,6,opt,name=gameName,proto3" json:"gameName,omitempty"`
	Token                *Token               `protobuf:"bytes,7,opt,name=token,proto3" json:"token,omitempty"`
	GameTime             *timestamp.Timestamp `protobuf:"bytes,8,opt,name=gameTime,proto3" json:"gameTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{5}
}

func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetWelcome() string {
	if m != nil {
		return m.Welcome
	}
	return ""
}

func (m *LoginResponse) GetCommanders() []string {
	if m != nil {
		return m.Commanders
	}
	return nil
}

func (m *LoginResponse) GetTeamName() string {
	if m != nil {
		return m.TeamName
	}
	return ""
}

func (m *LoginResponse) GetBriefing() string {
	if m != nil {
		return m.Briefing
	}
	return ""
}

func (m *LoginResponse) GetGameName() string {
	if m != nil {
		return m.GameName
	}
	return ""
}

func (m *LoginResponse) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *LoginResponse) GetGameTime() *timestamp.Timestamp {
	if m != nil {
		return m.GameTime
	}
	return nil
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Types
type Grid struct {
	X                    int32    `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32    `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Cover                bool     `protobuf:"varint,3,opt,name=cover,proto3" json:"cover,omitempty"`
	Woods                bool     `protobuf:"varint,4,opt,name=woods,proto3" json:"woods,omitempty"`
	Bua                  bool     `protobuf:"varint,5,opt,name=bua,proto3" json:"bua,omitempty"`
	Fort                 bool     `protobuf:"varint,6,opt,name=fort,proto3" json:"fort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Grid) Reset()         { *m = Grid{} }
func (m *Grid) String() string { return proto.CompactTextString(m) }
func (*Grid) ProtoMessage()    {}
func (*Grid) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{6}
}

func (m *Grid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Grid.Unmarshal(m, b)
}
func (m *Grid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Grid.Marshal(b, m, deterministic)
}
func (m *Grid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Grid.Merge(m, src)
}
func (m *Grid) XXX_Size() int {
	return xxx_messageInfo_Grid.Size(m)
}
func (m *Grid) XXX_DiscardUnknown() {
	xxx_messageInfo_Grid.DiscardUnknown(m)
}

var xxx_messageInfo_Grid proto.InternalMessageInfo

func (m *Grid) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Grid) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Grid) GetCover() bool {
	if m != nil {
		return m.Cover
	}
	return false
}

func (m *Grid) GetWoods() bool {
	if m != nil {
		return m.Woods
	}
	return false
}

func (m *Grid) GetBua() bool {
	if m != nil {
		return m.Bua
	}
	return false
}

func (m *Grid) GetFort() bool {
	if m != nil {
		return m.Fort
	}
	return false
}

// Unit details that are static for a game
type Unit struct {
	Name                 string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Arm                  Arm              `protobuf:"varint,2,opt,name=arm,proto3,enum=republique.Arm" json:"arm,omitempty"`
	UnitType             UnitType         `protobuf:"varint,3,opt,name=unitType,proto3,enum=republique.UnitType" json:"unitType,omitempty"`
	Strength             int32            `protobuf:"varint,4,opt,name=strength,proto3" json:"strength,omitempty"`
	Grade                UnitGrade        `protobuf:"varint,5,opt,name=grade,proto3,enum=republique.UnitGrade" json:"grade,omitempty"`
	SkirmishRating       SkirmishRating   `protobuf:"varint,6,opt,name=skirmishRating,proto3,enum=republique.SkirmishRating" json:"skirmishRating,omitempty"`
	SkirmisherMax        int32            `protobuf:"varint,7,opt,name=skirmisherMax,proto3" json:"skirmisherMax,omitempty"`
	Notes                string           `protobuf:"bytes,8,opt,name=notes,proto3" json:"notes,omitempty"`
	BnGuns               bool             `protobuf:"varint,9,opt,name=bnGuns,proto3" json:"bnGuns,omitempty"`
	Nationality          Nationality      `protobuf:"varint,10,opt,name=nationality,proto3,enum=republique.Nationality" json:"nationality,omitempty"`
	Drill                Drill            `protobuf:"varint,11,opt,name=drill,proto3,enum=republique.Drill" json:"drill,omitempty"`
	CommandReserve       bool             `protobuf:"varint,12,opt,name=commandReserve,proto3" json:"commandReserve,omitempty"`
	GameState            *UnitGameState   `protobuf:"bytes,13,opt,name=gameState,proto3" json:"gameState,omitempty"`
	History              []*UnitGameState `protobuf:"bytes,14,rep,name=history,proto3" json:"history,omitempty"`
	Id                   int32            `protobuf:"varint,15,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Unit) Reset()         { *m = Unit{} }
func (m *Unit) String() string { return proto.CompactTextString(m) }
func (*Unit) ProtoMessage()    {}
func (*Unit) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{7}
}

func (m *Unit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Unit.Unmarshal(m, b)
}
func (m *Unit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Unit.Marshal(b, m, deterministic)
}
func (m *Unit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Unit.Merge(m, src)
}
func (m *Unit) XXX_Size() int {
	return xxx_messageInfo_Unit.Size(m)
}
func (m *Unit) XXX_DiscardUnknown() {
	xxx_messageInfo_Unit.DiscardUnknown(m)
}

var xxx_messageInfo_Unit proto.InternalMessageInfo

func (m *Unit) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Unit) GetArm() Arm {
	if m != nil {
		return m.Arm
	}
	return Arm_SUPPORT
}

func (m *Unit) GetUnitType() UnitType {
	if m != nil {
		return m.UnitType
	}
	return UnitType_SUPPORT_UNIT
}

func (m *Unit) GetStrength() int32 {
	if m != nil {
		return m.Strength
	}
	return 0
}

func (m *Unit) GetGrade() UnitGrade {
	if m != nil {
		return m.Grade
	}
	return UnitGrade_CIVILIAN
}

func (m *Unit) GetSkirmishRating() SkirmishRating {
	if m != nil {
		return m.SkirmishRating
	}
	return SkirmishRating_POOR
}

func (m *Unit) GetSkirmisherMax() int32 {
	if m != nil {
		return m.SkirmisherMax
	}
	return 0
}

func (m *Unit) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *Unit) GetBnGuns() bool {
	if m != nil {
		return m.BnGuns
	}
	return false
}

func (m *Unit) GetNationality() Nationality {
	if m != nil {
		return m.Nationality
	}
	return Nationality_ANY_NATION
}

func (m *Unit) GetDrill() Drill {
	if m != nil {
		return m.Drill
	}
	return Drill_LINEAR
}

func (m *Unit) GetCommandReserve() bool {
	if m != nil {
		return m.CommandReserve
	}
	return false
}

func (m *Unit) GetGameState() *UnitGameState {
	if m != nil {
		return m.GameState
	}
	return nil
}

func (m *Unit) GetHistory() []*UnitGameState {
	if m != nil {
		return m.History
	}
	return nil
}

func (m *Unit) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Unit details that can change from turn to turn
type UnitGameState struct {
	Hits                 int32       `protobuf:"varint,1,opt,name=hits,proto3" json:"hits,omitempty"`
	SkirmishersDeployed  int32       `protobuf:"varint,2,opt,name=skirmishersDeployed,proto3" json:"skirmishersDeployed,omitempty"`
	Formation            Formation   `protobuf:"varint,3,opt,name=formation,proto3,enum=republique.Formation" json:"formation,omitempty"`
	MoraleState          MoraleState `protobuf:"varint,4,opt,name=moraleState,proto3,enum=republique.MoraleState" json:"moraleState,omitempty"`
	GunsDamaged          bool        `protobuf:"varint,5,opt,name=gunsDamaged,proto3" json:"gunsDamaged,omitempty"`
	GunsDeployed         bool        `protobuf:"varint,6,opt,name=gunsDeployed,proto3" json:"gunsDeployed,omitempty"`
	GunsStocked          bool        `protobuf:"varint,7,opt,name=gunsStocked,proto3" json:"gunsStocked,omitempty"`
	Hidden               bool        `protobuf:"varint,8,opt,name=hidden,proto3" json:"hidden,omitempty"`
	HasFired             bool        `protobuf:"varint,9,opt,name=hasFired,proto3" json:"hasFired,omitempty"`
	Fatigue              int32       `protobuf:"varint,10,opt,name=fatigue,proto3" json:"fatigue,omitempty"`
	LowAmmo              bool        `protobuf:"varint,11,opt,name=lowAmmo,proto3" json:"lowAmmo,omitempty"`
	Cover                int32       `protobuf:"varint,12,opt,name=cover,proto3" json:"cover,omitempty"`
	Grid                 *Grid       `protobuf:"bytes,13,opt,name=grid,proto3" json:"grid,omitempty"`
	PlayerInstructions   string      `protobuf:"bytes,14,opt,name=playerInstructions,proto3" json:"playerInstructions,omitempty"`
	ActionRequired       bool        `protobuf:"varint,15,opt,name=actionRequired,proto3" json:"actionRequired,omitempty"`
	Objective            *Grid       `protobuf:"bytes,16,opt,name=objective,proto3" json:"objective,omitempty"`
	MoveTo               *Grid       `protobuf:"bytes,17,opt,name=moveTo,proto3" json:"moveTo,omitempty"`
	GunTarget            *Grid       `protobuf:"bytes,18,opt,name=gunTarget,proto3" json:"gunTarget,omitempty"`
	HasCharged           bool        `protobuf:"varint,19,opt,name=hasCharged,proto3" json:"hasCharged,omitempty"`
	SupportingUnit       string      `protobuf:"bytes,20,opt,name=supportingUnit,proto3" json:"supportingUnit,omitempty"`
	EngagedUnit          string      `protobuf:"bytes,21,opt,name=engagedUnit,proto3" json:"engagedUnit,omitempty"`
	CanAssault           bool        `protobuf:"varint,22,opt,name=canAssault,proto3" json:"canAssault,omitempty"`
	HasAssaulted         bool        `protobuf:"varint,23,opt,name=hasAssaulted,proto3" json:"hasAssaulted,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UnitGameState) Reset()         { *m = UnitGameState{} }
func (m *UnitGameState) String() string { return proto.CompactTextString(m) }
func (*UnitGameState) ProtoMessage()    {}
func (*UnitGameState) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{8}
}

func (m *UnitGameState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnitGameState.Unmarshal(m, b)
}
func (m *UnitGameState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnitGameState.Marshal(b, m, deterministic)
}
func (m *UnitGameState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnitGameState.Merge(m, src)
}
func (m *UnitGameState) XXX_Size() int {
	return xxx_messageInfo_UnitGameState.Size(m)
}
func (m *UnitGameState) XXX_DiscardUnknown() {
	xxx_messageInfo_UnitGameState.DiscardUnknown(m)
}

var xxx_messageInfo_UnitGameState proto.InternalMessageInfo

func (m *UnitGameState) GetHits() int32 {
	if m != nil {
		return m.Hits
	}
	return 0
}

func (m *UnitGameState) GetSkirmishersDeployed() int32 {
	if m != nil {
		return m.SkirmishersDeployed
	}
	return 0
}

func (m *UnitGameState) GetFormation() Formation {
	if m != nil {
		return m.Formation
	}
	return Formation_RESERVE
}

func (m *UnitGameState) GetMoraleState() MoraleState {
	if m != nil {
		return m.MoraleState
	}
	return MoraleState_RESTING
}

func (m *UnitGameState) GetGunsDamaged() bool {
	if m != nil {
		return m.GunsDamaged
	}
	return false
}

func (m *UnitGameState) GetGunsDeployed() bool {
	if m != nil {
		return m.GunsDeployed
	}
	return false
}

func (m *UnitGameState) GetGunsStocked() bool {
	if m != nil {
		return m.GunsStocked
	}
	return false
}

func (m *UnitGameState) GetHidden() bool {
	if m != nil {
		return m.Hidden
	}
	return false
}

func (m *UnitGameState) GetHasFired() bool {
	if m != nil {
		return m.HasFired
	}
	return false
}

func (m *UnitGameState) GetFatigue() int32 {
	if m != nil {
		return m.Fatigue
	}
	return 0
}

func (m *UnitGameState) GetLowAmmo() bool {
	if m != nil {
		return m.LowAmmo
	}
	return false
}

func (m *UnitGameState) GetCover() int32 {
	if m != nil {
		return m.Cover
	}
	return 0
}

func (m *UnitGameState) GetGrid() *Grid {
	if m != nil {
		return m.Grid
	}
	return nil
}

func (m *UnitGameState) GetPlayerInstructions() string {
	if m != nil {
		return m.PlayerInstructions
	}
	return ""
}

func (m *UnitGameState) GetActionRequired() bool {
	if m != nil {
		return m.ActionRequired
	}
	return false
}

func (m *UnitGameState) GetObjective() *Grid {
	if m != nil {
		return m.Objective
	}
	return nil
}

func (m *UnitGameState) GetMoveTo() *Grid {
	if m != nil {
		return m.MoveTo
	}
	return nil
}

func (m *UnitGameState) GetGunTarget() *Grid {
	if m != nil {
		return m.GunTarget
	}
	return nil
}

func (m *UnitGameState) GetHasCharged() bool {
	if m != nil {
		return m.HasCharged
	}
	return false
}

func (m *UnitGameState) GetSupportingUnit() string {
	if m != nil {
		return m.SupportingUnit
	}
	return ""
}

func (m *UnitGameState) GetEngagedUnit() string {
	if m != nil {
		return m.EngagedUnit
	}
	return ""
}

func (m *UnitGameState) GetCanAssault() bool {
	if m != nil {
		return m.CanAssault
	}
	return false
}

func (m *UnitGameState) GetHasAssaulted() bool {
	if m != nil {
		return m.HasAssaulted
	}
	return false
}

// Command details that are static for a game
type Command struct {
	Name                 string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CommanderName        string              `protobuf:"bytes,2,opt,name=commanderName,proto3" json:"commanderName,omitempty"`
	CommandRating        CommandRating       `protobuf:"varint,3,opt,name=commandRating,proto3,enum=republique.CommandRating" json:"commandRating,omitempty"`
	Rank                 Rank                `protobuf:"varint,4,opt,name=rank,proto3,enum=republique.Rank" json:"rank,omitempty"`
	Subcommands          []*Command          `protobuf:"bytes,5,rep,name=subcommands,proto3" json:"subcommands,omitempty"`
	Units                []*Unit             `protobuf:"bytes,6,rep,name=units,proto3" json:"units,omitempty"`
	CommanderBonus       int32               `protobuf:"varint,7,opt,name=commanderBonus,proto3" json:"commanderBonus,omitempty"`
	Arm                  Arm                 `protobuf:"varint,8,opt,name=arm,proto3,enum=republique.Arm" json:"arm,omitempty"`
	Nationality          Nationality         `protobuf:"varint,9,opt,name=nationality,proto3,enum=republique.Nationality" json:"nationality,omitempty"`
	Grade                UnitGrade           `protobuf:"varint,10,opt,name=grade,proto3,enum=republique.UnitGrade" json:"grade,omitempty"`
	Drill                Drill               `protobuf:"varint,11,opt,name=drill,proto3,enum=republique.Drill" json:"drill,omitempty"`
	Notes                string              `protobuf:"bytes,12,opt,name=notes,proto3" json:"notes,omitempty"`
	Arrival              *Arrival            `protobuf:"bytes,13,opt,name=arrival,proto3" json:"arrival,omitempty"`
	GameState            *CommandGameState   `protobuf:"bytes,14,opt,name=gameState,proto3" json:"gameState,omitempty"`
	History              []*CommandGameState `protobuf:"bytes,15,rep,name=history,proto3" json:"history,omitempty"`
	Reserve              bool                `protobuf:"varint,16,opt,name=reserve,proto3" json:"reserve,omitempty"`
	Id                   int32               `protobuf:"varint,17,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{9}
}

func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (m *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(m, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Command) GetCommanderName() string {
	if m != nil {
		return m.CommanderName
	}
	return ""
}

func (m *Command) GetCommandRating() CommandRating {
	if m != nil {
		return m.CommandRating
	}
	return CommandRating_USELESS
}

func (m *Command) GetRank() Rank {
	if m != nil {
		return m.Rank
	}
	return Rank_BATTALION
}

func (m *Command) GetSubcommands() []*Command {
	if m != nil {
		return m.Subcommands
	}
	return nil
}

func (m *Command) GetUnits() []*Unit {
	if m != nil {
		return m.Units
	}
	return nil
}

func (m *Command) GetCommanderBonus() int32 {
	if m != nil {
		return m.CommanderBonus
	}
	return 0
}

func (m *Command) GetArm() Arm {
	if m != nil {
		return m.Arm
	}
	return Arm_SUPPORT
}

func (m *Command) GetNationality() Nationality {
	if m != nil {
		return m.Nationality
	}
	return Nationality_ANY_NATION
}

func (m *Command) GetGrade() UnitGrade {
	if m != nil {
		return m.Grade
	}
	return UnitGrade_CIVILIAN
}

func (m *Command) GetDrill() Drill {
	if m != nil {
		return m.Drill
	}
	return Drill_LINEAR
}

func (m *Command) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *Command) GetArrival() *Arrival {
	if m != nil {
		return m.Arrival
	}
	return nil
}

func (m *Command) GetGameState() *CommandGameState {
	if m != nil {
		return m.GameState
	}
	return nil
}

func (m *Command) GetHistory() []*CommandGameState {
	if m != nil {
		return m.History
	}
	return nil
}

func (m *Command) GetReserve() bool {
	if m != nil {
		return m.Reserve
	}
	return false
}

func (m *Command) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Command details that can change from turn to turn
type CommandGameState struct {
	Turn                 int32                `protobuf:"varint,1,opt,name=turn,proto3" json:"turn,omitempty"`
	Grid                 *Grid                `protobuf:"bytes,2,opt,name=grid,proto3" json:"grid,omitempty"`
	Position             BattlefieldPosition  `protobuf:"varint,3,opt,name=position,proto3,enum=republique.BattlefieldPosition" json:"position,omitempty"`
	Formation            string               `protobuf:"bytes,4,opt,name=formation,proto3" json:"formation,omitempty"`
	PanicState           int32                `protobuf:"varint,5,opt,name=panicState,proto3" json:"panicState,omitempty"`
	Injured              bool                 `protobuf:"varint,6,opt,name=injured,proto3" json:"injured,omitempty"`
	ObjectiveName        string               `protobuf:"bytes,7,opt,name=objectiveName,proto3" json:"objectiveName,omitempty"`
	Orders               Order                `protobuf:"varint,8,opt,name=orders,proto3,enum=republique.Order" json:"orders,omitempty"`
	AttachedTo           string               `protobuf:"bytes,9,opt,name=attachedTo,proto3" json:"attachedTo,omitempty"`
	HasOrdered           bool                 `protobuf:"varint,10,opt,name=hasOrdered,proto3" json:"hasOrdered,omitempty"`
	HasMoved             bool                 `protobuf:"varint,11,opt,name=hasMoved,proto3" json:"hasMoved,omitempty"`
	HasRallied           bool                 `protobuf:"varint,12,opt,name=hasRallied,proto3" json:"hasRallied,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,13,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Objective            *Grid                `protobuf:"bytes,14,opt,name=objective,proto3" json:"objective,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CommandGameState) Reset()         { *m = CommandGameState{} }
func (m *CommandGameState) String() string { return proto.CompactTextString(m) }
func (*CommandGameState) ProtoMessage()    {}
func (*CommandGameState) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{10}
}

func (m *CommandGameState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandGameState.Unmarshal(m, b)
}
func (m *CommandGameState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandGameState.Marshal(b, m, deterministic)
}
func (m *CommandGameState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandGameState.Merge(m, src)
}
func (m *CommandGameState) XXX_Size() int {
	return xxx_messageInfo_CommandGameState.Size(m)
}
func (m *CommandGameState) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandGameState.DiscardUnknown(m)
}

var xxx_messageInfo_CommandGameState proto.InternalMessageInfo

func (m *CommandGameState) GetTurn() int32 {
	if m != nil {
		return m.Turn
	}
	return 0
}

func (m *CommandGameState) GetGrid() *Grid {
	if m != nil {
		return m.Grid
	}
	return nil
}

func (m *CommandGameState) GetPosition() BattlefieldPosition {
	if m != nil {
		return m.Position
	}
	return BattlefieldPosition_REAR
}

func (m *CommandGameState) GetFormation() string {
	if m != nil {
		return m.Formation
	}
	return ""
}

func (m *CommandGameState) GetPanicState() int32 {
	if m != nil {
		return m.PanicState
	}
	return 0
}

func (m *CommandGameState) GetInjured() bool {
	if m != nil {
		return m.Injured
	}
	return false
}

func (m *CommandGameState) GetObjectiveName() string {
	if m != nil {
		return m.ObjectiveName
	}
	return ""
}

func (m *CommandGameState) GetOrders() Order {
	if m != nil {
		return m.Orders
	}
	return Order_RESTAGE
}

func (m *CommandGameState) GetAttachedTo() string {
	if m != nil {
		return m.AttachedTo
	}
	return ""
}

func (m *CommandGameState) GetHasOrdered() bool {
	if m != nil {
		return m.HasOrdered
	}
	return false
}

func (m *CommandGameState) GetHasMoved() bool {
	if m != nil {
		return m.HasMoved
	}
	return false
}

func (m *CommandGameState) GetHasRallied() bool {
	if m != nil {
		return m.HasRallied
	}
	return false
}

func (m *CommandGameState) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *CommandGameState) GetObjective() *Grid {
	if m != nil {
		return m.Objective
	}
	return nil
}

type Arrival struct {
	From                 int32                `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   int32                `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	Percent              int32                `protobuf:"varint,3,opt,name=percent,proto3" json:"percent,omitempty"`
	ComputedTurn         int32                `protobuf:"varint,4,opt,name=computedTurn,proto3" json:"computedTurn,omitempty"`
	ActualArrival        *timestamp.Timestamp `protobuf:"bytes,5,opt,name=actualArrival,proto3" json:"actualArrival,omitempty"`
	Position             BattlefieldPosition  `protobuf:"varint,6,opt,name=position,proto3,enum=republique.BattlefieldPosition" json:"position,omitempty"`
	Contact              bool                 `protobuf:"varint,7,opt,name=contact,proto3" json:"contact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Arrival) Reset()         { *m = Arrival{} }
func (m *Arrival) String() string { return proto.CompactTextString(m) }
func (*Arrival) ProtoMessage()    {}
func (*Arrival) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{11}
}

func (m *Arrival) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Arrival.Unmarshal(m, b)
}
func (m *Arrival) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Arrival.Marshal(b, m, deterministic)
}
func (m *Arrival) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Arrival.Merge(m, src)
}
func (m *Arrival) XXX_Size() int {
	return xxx_messageInfo_Arrival.Size(m)
}
func (m *Arrival) XXX_DiscardUnknown() {
	xxx_messageInfo_Arrival.DiscardUnknown(m)
}

var xxx_messageInfo_Arrival proto.InternalMessageInfo

func (m *Arrival) GetFrom() int32 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *Arrival) GetTo() int32 {
	if m != nil {
		return m.To
	}
	return 0
}

func (m *Arrival) GetPercent() int32 {
	if m != nil {
		return m.Percent
	}
	return 0
}

func (m *Arrival) GetComputedTurn() int32 {
	if m != nil {
		return m.ComputedTurn
	}
	return 0
}

func (m *Arrival) GetActualArrival() *timestamp.Timestamp {
	if m != nil {
		return m.ActualArrival
	}
	return nil
}

func (m *Arrival) GetPosition() BattlefieldPosition {
	if m != nil {
		return m.Position
	}
	return BattlefieldPosition_REAR
}

func (m *Arrival) GetContact() bool {
	if m != nil {
		return m.Contact
	}
	return false
}

type Team struct {
	Name                 string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Briefing             string     `protobuf:"bytes,2,opt,name=briefing,proto3" json:"briefing,omitempty"`
	Commands             []*Command `protobuf:"bytes,3,rep,name=commands,proto3" json:"commands,omitempty"`
	AccessCode           string     `protobuf:"bytes,4,opt,name=accessCode,proto3" json:"accessCode,omitempty"`
	Players              []*Player  `protobuf:"bytes,5,rep,name=players,proto3" json:"players,omitempty"`
	GameName             string     `protobuf:"bytes,6,opt,name=gameName,proto3" json:"gameName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Team) Reset()         { *m = Team{} }
func (m *Team) String() string { return proto.CompactTextString(m) }
func (*Team) ProtoMessage()    {}
func (*Team) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{12}
}

func (m *Team) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Team.Unmarshal(m, b)
}
func (m *Team) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Team.Marshal(b, m, deterministic)
}
func (m *Team) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Team.Merge(m, src)
}
func (m *Team) XXX_Size() int {
	return xxx_messageInfo_Team.Size(m)
}
func (m *Team) XXX_DiscardUnknown() {
	xxx_messageInfo_Team.DiscardUnknown(m)
}

var xxx_messageInfo_Team proto.InternalMessageInfo

func (m *Team) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Team) GetBriefing() string {
	if m != nil {
		return m.Briefing
	}
	return ""
}

func (m *Team) GetCommands() []*Command {
	if m != nil {
		return m.Commands
	}
	return nil
}

func (m *Team) GetAccessCode() string {
	if m != nil {
		return m.AccessCode
	}
	return ""
}

func (m *Team) GetPlayers() []*Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *Team) GetGameName() string {
	if m != nil {
		return m.GameName
	}
	return ""
}

// TODO - add some public key enc / tokens to this
type Player struct {
	AccessCode           string   `protobuf:"bytes,1,opt,name=accessCode,proto3" json:"accessCode,omitempty"`
	Commanders           []string `protobuf:"bytes,3,rep,name=commanders,proto3" json:"commanders,omitempty"`
	Points               int32    `protobuf:"varint,4,opt,name=points,proto3" json:"points,omitempty"`
	Token                *Token   `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Player) Reset()         { *m = Player{} }
func (m *Player) String() string { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()    {}
func (*Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{13}
}

func (m *Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Player.Unmarshal(m, b)
}
func (m *Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Player.Marshal(b, m, deterministic)
}
func (m *Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Player.Merge(m, src)
}
func (m *Player) XXX_Size() int {
	return xxx_messageInfo_Player.Size(m)
}
func (m *Player) XXX_DiscardUnknown() {
	xxx_messageInfo_Player.DiscardUnknown(m)
}

var xxx_messageInfo_Player proto.InternalMessageInfo

func (m *Player) GetAccessCode() string {
	if m != nil {
		return m.AccessCode
	}
	return ""
}

func (m *Player) GetCommanders() []string {
	if m != nil {
		return m.Commanders
	}
	return nil
}

func (m *Player) GetPoints() int32 {
	if m != nil {
		return m.Points
	}
	return 0
}

func (m *Player) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

type Units struct {
	Commands             []*Command `protobuf:"bytes,1,rep,name=commands,proto3" json:"commands,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Units) Reset()         { *m = Units{} }
func (m *Units) String() string { return proto.CompactTextString(m) }
func (*Units) ProtoMessage()    {}
func (*Units) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{14}
}

func (m *Units) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Units.Unmarshal(m, b)
}
func (m *Units) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Units.Marshal(b, m, deterministic)
}
func (m *Units) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Units.Merge(m, src)
}
func (m *Units) XXX_Size() int {
	return xxx_messageInfo_Units.Size(m)
}
func (m *Units) XXX_DiscardUnknown() {
	xxx_messageInfo_Units.DiscardUnknown(m)
}

var xxx_messageInfo_Units proto.InternalMessageInfo

func (m *Units) GetCommands() []*Command {
	if m != nil {
		return m.Commands
	}
	return nil
}

type Token struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Expires              *timestamp.Timestamp `protobuf:"bytes,2,opt,name=expires,proto3" json:"expires,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{15}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Token) GetExpires() *timestamp.Timestamp {
	if m != nil {
		return m.Expires
	}
	return nil
}

type Scenario struct {
	StartTime            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	Teams                map[string]*Team     `protobuf:"bytes,2,rep,name=teams,proto3" json:"teams,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Scenario) Reset()         { *m = Scenario{} }
func (m *Scenario) String() string { return proto.CompactTextString(m) }
func (*Scenario) ProtoMessage()    {}
func (*Scenario) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{16}
}

func (m *Scenario) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Scenario.Unmarshal(m, b)
}
func (m *Scenario) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Scenario.Marshal(b, m, deterministic)
}
func (m *Scenario) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scenario.Merge(m, src)
}
func (m *Scenario) XXX_Size() int {
	return xxx_messageInfo_Scenario.Size(m)
}
func (m *Scenario) XXX_DiscardUnknown() {
	xxx_messageInfo_Scenario.DiscardUnknown(m)
}

var xxx_messageInfo_Scenario proto.InternalMessageInfo

func (m *Scenario) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *Scenario) GetTeams() map[string]*Team {
	if m != nil {
		return m.Teams
	}
	return nil
}

type Game struct {
	Scenario             *Scenario            `protobuf:"bytes,1,opt,name=scenario,proto3" json:"scenario,omitempty"`
	TurnNumber           int32                `protobuf:"varint,2,opt,name=turnNumber,proto3" json:"turnNumber,omitempty"`
	TableX               int32                `protobuf:"varint,3,opt,name=tableX,proto3" json:"tableX,omitempty"`
	TableY               int32                `protobuf:"varint,4,opt,name=tableY,proto3" json:"tableY,omitempty"`
	GameTime             *timestamp.Timestamp `protobuf:"bytes,5,opt,name=gameTime,proto3" json:"gameTime,omitempty"`
	AdminAccess          string               `protobuf:"bytes,6,opt,name=adminAccess,proto3" json:"adminAccess,omitempty"`
	Name                 string               `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Phase                Phase                `protobuf:"varint,8,opt,name=phase,proto3,enum=republique.Phase" json:"phase,omitempty"`
	TableLayout          string               `protobuf:"bytes,9,opt,name=tableLayout,proto3" json:"tableLayout,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Game) Reset()         { *m = Game{} }
func (m *Game) String() string { return proto.CompactTextString(m) }
func (*Game) ProtoMessage()    {}
func (*Game) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5154d382a6bdd48, []int{17}
}

func (m *Game) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game.Unmarshal(m, b)
}
func (m *Game) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game.Marshal(b, m, deterministic)
}
func (m *Game) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game.Merge(m, src)
}
func (m *Game) XXX_Size() int {
	return xxx_messageInfo_Game.Size(m)
}
func (m *Game) XXX_DiscardUnknown() {
	xxx_messageInfo_Game.DiscardUnknown(m)
}

var xxx_messageInfo_Game proto.InternalMessageInfo

func (m *Game) GetScenario() *Scenario {
	if m != nil {
		return m.Scenario
	}
	return nil
}

func (m *Game) GetTurnNumber() int32 {
	if m != nil {
		return m.TurnNumber
	}
	return 0
}

func (m *Game) GetTableX() int32 {
	if m != nil {
		return m.TableX
	}
	return 0
}

func (m *Game) GetTableY() int32 {
	if m != nil {
		return m.TableY
	}
	return 0
}

func (m *Game) GetGameTime() *timestamp.Timestamp {
	if m != nil {
		return m.GameTime
	}
	return nil
}

func (m *Game) GetAdminAccess() string {
	if m != nil {
		return m.AdminAccess
	}
	return ""
}

func (m *Game) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Game) GetPhase() Phase {
	if m != nil {
		return m.Phase
	}
	return Phase_PREGAME
}

func (m *Game) GetTableLayout() string {
	if m != nil {
		return m.TableLayout
	}
	return ""
}

func init() {
	proto.RegisterEnum("republique.Arm", Arm_name, Arm_value)
	proto.RegisterEnum("republique.UnitType", UnitType_name, UnitType_value)
	proto.RegisterEnum("republique.UnitGrade", UnitGrade_name, UnitGrade_value)
	proto.RegisterEnum("republique.MoraleState", MoraleState_name, MoraleState_value)
	proto.RegisterEnum("republique.Formation", Formation_name, Formation_value)
	proto.RegisterEnum("republique.Rank", Rank_name, Rank_value)
	proto.RegisterEnum("republique.SkirmishRating", SkirmishRating_name, SkirmishRating_value)
	proto.RegisterEnum("republique.CommandRating", CommandRating_name, CommandRating_value)
	proto.RegisterEnum("republique.Order", Order_name, Order_value)
	proto.RegisterEnum("republique.Nationality", Nationality_name, Nationality_value)
	proto.RegisterEnum("republique.Drill", Drill_name, Drill_value)
	proto.RegisterEnum("republique.BattlefieldPosition", BattlefieldPosition_name, BattlefieldPosition_value)
	proto.RegisterEnum("republique.Phase", Phase_name, Phase_value)
	proto.RegisterType((*StringMessage)(nil), "republique.StringMessage")
	proto.RegisterType((*EmptyMessage)(nil), "republique.EmptyMessage")
	proto.RegisterType((*TokenMessage)(nil), "republique.TokenMessage")
	proto.RegisterType((*GameTimeResponse)(nil), "republique.GameTimeResponse")
	proto.RegisterType((*LoginMessage)(nil), "republique.LoginMessage")
	proto.RegisterType((*LoginResponse)(nil), "republique.LoginResponse")
	proto.RegisterType((*Grid)(nil), "republique.Grid")
	proto.RegisterType((*Unit)(nil), "republique.Unit")
	proto.RegisterType((*UnitGameState)(nil), "republique.UnitGameState")
	proto.RegisterType((*Command)(nil), "republique.Command")
	proto.RegisterType((*CommandGameState)(nil), "republique.CommandGameState")
	proto.RegisterType((*Arrival)(nil), "republique.Arrival")
	proto.RegisterType((*Team)(nil), "republique.Team")
	proto.RegisterType((*Player)(nil), "republique.Player")
	proto.RegisterType((*Units)(nil), "republique.Units")
	proto.RegisterType((*Token)(nil), "republique.Token")
	proto.RegisterType((*Scenario)(nil), "republique.Scenario")
	proto.RegisterMapType((map[string]*Team)(nil), "republique.Scenario.TeamsEntry")
	proto.RegisterType((*Game)(nil), "republique.Game")
}

func init() { proto.RegisterFile("republique.proto", fileDescriptor_f5154d382a6bdd48) }

var fileDescriptor_f5154d382a6bdd48 = []byte{
	// 2866 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x59, 0x4f, 0x73, 0xe3, 0xc6,
	0x95, 0x17, 0xff, 0x80, 0x7f, 0x9a, 0x12, 0xd5, 0xd3, 0x9a, 0x19, 0xd3, 0x53, 0x2e, 0x5b, 0xcb,
	0xf2, 0x7a, 0x67, 0xb5, 0xbb, 0xb2, 0x47, 0x5e, 0x7b, 0x6d, 0x6f, 0x95, 0xd7, 0x2d, 0x02, 0xa4,
	0xe0, 0x01, 0x41, 0x6d, 0x03, 0xd4, 0x58, 0xa9, 0x54, 0xa9, 0x20, 0xb2, 0x87, 0x82, 0x87, 0x04,
	0x68, 0x00, 0x94, 0x47, 0xf7, 0x54, 0xaa, 0x72, 0xc8, 0x21, 0xb7, 0x7c, 0x8a, 0xe4, 0x92, 0x2f,
	0x90, 0x53, 0x72, 0x4c, 0xae, 0xb9, 0xe5, 0x8b, 0xa4, 0x52, 0xaf, 0xbb, 0x01, 0x02, 0x1c, 0x8d,
	0x66, 0x7c, 0xc3, 0xfb, 0xd7, 0xfd, 0xfa, 0xbd, 0xdf, 0x7b, 0xaf, 0x9b, 0x44, 0x38, 0xe2, 0xcb,
	0xd5, 0xe5, 0xdc, 0xff, 0x61, 0xc5, 0x0f, 0x97, 0x51, 0x98, 0x84, 0x04, 0xad, 0x39, 0x8f, 0x3e,
	0x98, 0x85, 0xe1, 0x6c, 0xce, 0x3f, 0x16, 0x92, 0xcb, 0xd5, 0xf3, 0x8f, 0x13, 0x7f, 0xc1, 0xe3,
	0xc4, 0x5b, 0x2c, 0xa5, 0x72, 0xf7, 0x5f, 0xd1, 0x8e, 0x93, 0x44, 0x7e, 0x30, 0x1b, 0xf2, 0x38,
	0xf6, 0x66, 0x9c, 0xdc, 0x47, 0xda, 0xb5, 0x37, 0x5f, 0xf1, 0x4e, 0x69, 0xbf, 0xf4, 0xb8, 0xc9,
	0x24, 0xd1, 0x6d, 0xa3, 0x6d, 0x63, 0xb1, 0x4c, 0x6e, 0x94, 0x56, 0xf7, 0x7d, 0xb4, 0xed, 0x86,
	0x2f, 0x78, 0x90, 0x5a, 0xb5, 0x51, 0xd9, 0x9f, 0x2a, 0x93, 0xb2, 0x3f, 0xed, 0xfe, 0xa6, 0x84,
	0xf0, 0xc0, 0x5b, 0x70, 0xd7, 0x5f, 0x70, 0xc6, 0xe3, 0x65, 0x18, 0xc4, 0x9c, 0xfc, 0x1b, 0xd2,
	0x96, 0x57, 0x5e, 0x2c, 0x97, 0x6e, 0x1f, 0xdd, 0x3b, 0xcc, 0xb9, 0x7e, 0x0a, 0x02, 0x26, 0xe5,
	0xe4, 0x73, 0xd4, 0x98, 0x29, 0xe3, 0x4e, 0x79, 0xbf, 0xf4, 0xb8, 0x75, 0xf4, 0xe8, 0x50, 0x1e,
	0xe4, 0x30, 0x3d, 0xc8, 0xa1, 0x9b, 0x1e, 0x84, 0x65, 0xba, 0xe4, 0x3d, 0xd4, 0x8c, 0x93, 0x70,
	0xf9, 0xcc, 0x4b, 0x26, 0x57, 0x9d, 0xca, 0x7e, 0xe9, 0x71, 0x85, 0xad, 0x19, 0xdd, 0x6f, 0xd1,
	0xb6, 0x15, 0xce, 0xfc, 0xcc, 0xe7, 0x47, 0xa8, 0x91, 0x70, 0x6f, 0xd1, 0x0b, 0xa7, 0x72, 0x97,
	0x26, 0xcb, 0x68, 0xf2, 0x3e, 0x42, 0xcb, 0xb9, 0x77, 0xc3, 0x23, 0x21, 0xad, 0x08, 0x69, 0x8e,
	0xd3, 0xfd, 0x47, 0x09, 0xed, 0x88, 0xc5, 0xb2, 0xc3, 0x75, 0x50, 0xfd, 0x47, 0x3e, 0x9f, 0x84,
	0x8b, 0x74, 0xb1, 0x94, 0x84, 0xb5, 0x26, 0xe1, 0x62, 0xe1, 0x05, 0x53, 0x1e, 0xc5, 0x9d, 0xca,
	0x7e, 0x05, 0xd6, 0x5a, 0x73, 0x52, 0x3f, 0x6c, 0x6f, 0xc1, 0x3b, 0xd5, 0xb5, 0x1f, 0x40, 0x83,
	0xec, 0x32, 0xf2, 0xf9, 0x73, 0x3f, 0x98, 0x75, 0x34, 0x29, 0x4b, 0x69, 0x90, 0xc1, 0xc9, 0x85,
	0x5d, 0x4d, 0xca, 0x52, 0x1a, 0x42, 0x9d, 0x40, 0x7e, 0x3a, 0x75, 0x11, 0xbe, 0x42, 0xa8, 0x45,
	0xe2, 0x98, 0x94, 0x17, 0x42, 0xdd, 0x78, 0xfb, 0x50, 0x77, 0x13, 0x54, 0x1d, 0x44, 0xfe, 0x94,
	0x6c, 0xa3, 0xd2, 0x4b, 0x91, 0x4f, 0x8d, 0x95, 0x5e, 0x02, 0x75, 0x23, 0x8e, 0xaf, 0xb1, 0xd2,
	0x0d, 0x40, 0x69, 0x12, 0x5e, 0xf3, 0x48, 0xc4, 0xaf, 0xc1, 0x24, 0x01, 0xdc, 0x1f, 0xc3, 0x70,
	0x1a, 0x8b, 0xb3, 0x36, 0x98, 0x24, 0x08, 0x46, 0x95, 0xcb, 0x95, 0x27, 0xce, 0xd8, 0x60, 0xf0,
	0x49, 0x08, 0xaa, 0x3e, 0x0f, 0xa3, 0x44, 0x1c, 0xad, 0xc1, 0xc4, 0x77, 0xf7, 0x6f, 0x55, 0x54,
	0x1d, 0x07, 0x7e, 0x02, 0xc2, 0x00, 0xce, 0x2d, 0x11, 0x27, 0xbe, 0xc9, 0xbf, 0xa0, 0x8a, 0x17,
	0x2d, 0xc4, 0xf6, 0xed, 0xa3, 0xdd, 0xfc, 0x89, 0x69, 0xb4, 0x60, 0x20, 0x23, 0x9f, 0xa0, 0xc6,
	0x2a, 0xf0, 0x13, 0xf7, 0x66, 0x29, 0x93, 0xda, 0x3e, 0xba, 0x9f, 0xd7, 0x1b, 0x2b, 0x19, 0xcb,
	0xb4, 0x20, 0xc8, 0x71, 0x12, 0xf1, 0x60, 0x96, 0x5c, 0x09, 0x87, 0x35, 0x96, 0xd1, 0xe4, 0x3f,
	0x90, 0x36, 0x8b, 0xbc, 0x29, 0x17, 0x5e, 0xb7, 0x8f, 0x1e, 0x6c, 0x2e, 0x35, 0x00, 0x21, 0x93,
	0x3a, 0xe4, 0x18, 0xb5, 0xe3, 0x17, 0x7e, 0xb4, 0xf0, 0xe3, 0x2b, 0xe6, 0x25, 0x90, 0xcf, 0x9a,
	0xb0, 0x7a, 0x94, 0xb7, 0x72, 0x0a, 0x1a, 0x6c, 0xc3, 0x82, 0x7c, 0x88, 0x76, 0x52, 0x0e, 0x8f,
	0x86, 0xde, 0x4b, 0x91, 0x5d, 0x8d, 0x15, 0x99, 0x10, 0xe0, 0x20, 0x4c, 0x78, 0x2c, 0xf2, 0xd9,
	0x64, 0x92, 0x20, 0x0f, 0x51, 0xed, 0x32, 0x18, 0xac, 0x82, 0xb8, 0xd3, 0x14, 0x01, 0x55, 0x14,
	0xf9, 0x12, 0xb5, 0x02, 0x2f, 0xf1, 0xc3, 0xc0, 0x9b, 0xfb, 0xc9, 0x4d, 0x07, 0x09, 0xa7, 0xde,
	0xc9, 0x3b, 0x65, 0xaf, 0xc5, 0x2c, 0xaf, 0x0b, 0x20, 0x9b, 0x46, 0xfe, 0x7c, 0xde, 0x69, 0xbd,
	0x5a, 0xcf, 0x3a, 0x08, 0x98, 0x94, 0x93, 0x8f, 0x50, 0x5b, 0xe1, 0x9d, 0xf1, 0x98, 0x47, 0xd7,
	0xbc, 0xb3, 0x2d, 0x7c, 0xd8, 0xe0, 0x92, 0xff, 0x41, 0x4d, 0x00, 0x98, 0x93, 0x78, 0x09, 0xef,
	0xec, 0x08, 0x34, 0xbe, 0xfb, 0x4a, 0x50, 0x53, 0x05, 0xb6, 0xd6, 0x25, 0x9f, 0xa2, 0xfa, 0x95,
	0x1f, 0x27, 0x61, 0x74, 0xd3, 0x69, 0xef, 0x57, 0xee, 0x36, 0x4b, 0x35, 0x55, 0xcf, 0xda, 0x15,
	0x21, 0x84, 0x9e, 0xf5, 0xf7, 0x1a, 0xda, 0x29, 0xa8, 0x02, 0xca, 0xae, 0xfc, 0x24, 0x56, 0xf8,
	0x16, 0xdf, 0xe4, 0x13, 0xb4, 0xb7, 0x0e, 0x77, 0xac, 0xf3, 0xe5, 0x3c, 0xbc, 0xe1, 0x53, 0x05,
	0xfa, 0xdb, 0x44, 0xe4, 0x53, 0xd4, 0x7c, 0x1e, 0x46, 0x0b, 0x11, 0x38, 0x85, 0xba, 0x02, 0x54,
	0xfa, 0xa9, 0x90, 0xad, 0xf5, 0x20, 0x2d, 0x8b, 0x30, 0xf2, 0xe6, 0x2a, 0x18, 0xd5, 0x57, 0xd3,
	0x32, 0x5c, 0x8b, 0x59, 0x5e, 0x97, 0xec, 0xa3, 0xd6, 0x6c, 0x15, 0xc4, 0xba, 0xb7, 0xf0, 0x66,
	0x7c, 0xaa, 0x4a, 0x2a, 0xcf, 0x22, 0x5d, 0xb4, 0x2d, 0xc8, 0xd4, 0x79, 0x59, 0x62, 0x05, 0x5e,
	0xba, 0x8a, 0x93, 0x84, 0x93, 0x17, 0x7c, 0x2a, 0x90, 0xa6, 0x56, 0x51, 0x2c, 0x40, 0xd4, 0x95,
	0x3f, 0x9d, 0xf2, 0x40, 0x00, 0xad, 0xc1, 0x14, 0x05, 0x25, 0x73, 0xe5, 0xc5, 0x7d, 0x3f, 0xe2,
	0x53, 0x85, 0xb5, 0x8c, 0x86, 0x2e, 0xf9, 0xdc, 0x4b, 0xfc, 0xd9, 0x8a, 0x0b, 0xa4, 0x69, 0x2c,
	0x25, 0x41, 0x32, 0x0f, 0x7f, 0xa4, 0x8b, 0x45, 0x28, 0xe0, 0xd4, 0x60, 0x29, 0xb9, 0x6e, 0x23,
	0xdb, 0xc2, 0x42, 0xb5, 0x91, 0x0f, 0x51, 0x75, 0x16, 0xf9, 0x53, 0x05, 0x13, 0x9c, 0x8f, 0x0c,
	0x34, 0x26, 0x26, 0xa4, 0xe4, 0x10, 0x11, 0xd9, 0xb5, 0xcd, 0x20, 0x4e, 0xa2, 0xd5, 0x04, 0x62,
	0x1b, 0x77, 0xda, 0xa2, 0x30, 0x6e, 0x91, 0x00, 0x52, 0x3d, 0xf1, 0xc9, 0xf8, 0x0f, 0x2b, 0x71,
	0x82, 0x5d, 0x89, 0xd4, 0x22, 0x97, 0x1c, 0xa2, 0x66, 0x78, 0xf9, 0x3d, 0x9f, 0x24, 0xfe, 0x35,
	0xef, 0xe0, 0xd7, 0xb8, 0xb0, 0x56, 0x21, 0x8f, 0x51, 0x6d, 0x11, 0x5e, 0x73, 0x37, 0xec, 0xdc,
	0x7b, 0x8d, 0xb2, 0x92, 0xc3, 0xca, 0xb3, 0x55, 0xe0, 0x7a, 0xd1, 0x8c, 0x27, 0x1d, 0xf2, 0xba,
	0x95, 0x33, 0x15, 0x98, 0x2e, 0x57, 0x5e, 0xdc, 0xbb, 0x02, 0x6a, 0xda, 0xd9, 0x13, 0xde, 0xe6,
	0x38, 0x70, 0xa2, 0x78, 0xb5, 0x5c, 0x86, 0x11, 0x74, 0x10, 0x80, 0x77, 0xe7, 0xbe, 0x38, 0xfd,
	0x06, 0x17, 0xf2, 0xcd, 0x83, 0x19, 0xc0, 0x43, 0x28, 0x3d, 0x10, 0x4a, 0x79, 0x96, 0x98, 0x63,
	0x5e, 0x40, 0xe3, 0xd8, 0x5b, 0xcd, 0x93, 0xce, 0x43, 0xb9, 0xd3, 0x9a, 0x03, 0xa8, 0xba, 0xf2,
	0x62, 0x45, 0xf1, 0x69, 0xe7, 0x1d, 0x89, 0xaa, 0x3c, 0xaf, 0xfb, 0x67, 0x0d, 0xd5, 0x7b, 0xb2,
	0xe8, 0x6f, 0xed, 0xe1, 0x1f, 0xa2, 0x9d, 0x6c, 0x32, 0x8a, 0xc1, 0x26, 0x67, 0x69, 0x91, 0x49,
	0xfe, 0x2f, 0xd3, 0x52, 0xad, 0x54, 0x56, 0x55, 0xa1, 0xe8, 0x7b, 0x79, 0x05, 0x56, 0xd4, 0x07,
	0xf0, 0x44, 0x5e, 0xf0, 0x42, 0x95, 0x55, 0x21, 0xbe, 0xcc, 0x0b, 0x5e, 0x30, 0x21, 0x25, 0x9f,
	0xa1, 0x56, 0xbc, 0xba, 0x54, 0x96, 0x71, 0x47, 0x13, 0x9d, 0x65, 0xef, 0xb6, 0x4d, 0xf2, 0x7a,
	0xe4, 0x23, 0xa4, 0xc1, 0xf8, 0x88, 0x3b, 0x35, 0x61, 0x80, 0x37, 0x5b, 0x11, 0x93, 0xe2, 0x5c,
	0x57, 0xe4, 0xd1, 0x71, 0x18, 0xac, 0x62, 0xd5, 0xce, 0x37, 0xb8, 0xe9, 0x5c, 0x6b, 0xdc, 0x31,
	0xd7, 0x36, 0x9a, 0x78, 0xf3, 0x27, 0x34, 0xf1, 0x6c, 0x88, 0xa1, 0xb7, 0x18, 0x62, 0x6f, 0xdd,
	0xf1, 0xb3, 0x19, 0xb4, 0x9d, 0x9f, 0x41, 0xff, 0x85, 0xea, 0x5e, 0x14, 0xf9, 0xd7, 0xde, 0x5c,
	0x95, 0xed, 0x5e, 0xf1, 0x34, 0x42, 0xc4, 0x52, 0x1d, 0xf2, 0x55, 0x7e, 0x1c, 0xb4, 0x85, 0xc1,
	0x7b, 0xb7, 0x44, 0xff, 0xd6, 0x89, 0xf0, 0xf9, 0x7a, 0x22, 0xec, 0x8a, 0x34, 0xdc, 0x6d, 0x99,
	0x0d, 0x85, 0x0e, 0xaa, 0x47, 0x6a, 0x46, 0x61, 0xd9, 0x86, 0x14, 0xa9, 0xc6, 0xc5, 0xbd, 0x6c,
	0x5c, 0xfc, 0xb6, 0x8a, 0xf0, 0xe6, 0x3a, 0x80, 0xe9, 0x64, 0x15, 0x05, 0xe9, 0xc4, 0x80, 0xef,
	0xac, 0x53, 0x95, 0xef, 0xec, 0x54, 0xff, 0x8b, 0x1a, 0xcb, 0x30, 0xf6, 0x73, 0x43, 0xe2, 0x83,
	0xbc, 0xe6, 0xb1, 0x97, 0x24, 0x73, 0xfe, 0xdc, 0xe7, 0xf3, 0xe9, 0xa9, 0x52, 0x63, 0x99, 0x01,
	0x5c, 0x7c, 0xd7, 0x23, 0x46, 0xde, 0x21, 0x73, 0xb3, 0x04, 0x2e, 0xb3, 0x5e, 0xe0, 0x4f, 0x64,
	0x20, 0x35, 0xe1, 0x5a, 0x8e, 0x03, 0x67, 0xf6, 0x83, 0xef, 0x57, 0x51, 0x36, 0x09, 0x52, 0x12,
	0xca, 0x31, 0xeb, 0x61, 0xa2, 0x1c, 0xeb, 0xb2, 0x1c, 0x0b, 0x4c, 0xf2, 0xef, 0xa8, 0x16, 0x46,
	0xe2, 0x72, 0xdb, 0x78, 0x15, 0x16, 0x23, 0x90, 0x30, 0xa5, 0x00, 0xae, 0x78, 0x49, 0xe2, 0x4d,
	0xae, 0xf8, 0xd4, 0x0d, 0x05, 0x4e, 0x9b, 0x2c, 0xc7, 0x51, 0xdd, 0x4c, 0xd8, 0xf0, 0xa9, 0x80,
	0xa4, 0xec, 0x66, 0x8a, 0xa3, 0x66, 0xcb, 0x30, 0xbc, 0xe6, 0x53, 0x35, 0x26, 0x32, 0x5a, 0xd9,
	0x32, 0x6f, 0x3e, 0xf7, 0xf9, 0x54, 0xdd, 0x30, 0x72, 0x1c, 0xf2, 0x05, 0x6a, 0x66, 0xaf, 0x1f,
	0x85, 0xbf, 0xbb, 0xee, 0xba, 0x6b, 0xe5, 0x62, 0xb7, 0x6f, 0xbf, 0xb1, 0xdb, 0x77, 0x7f, 0x51,
	0x46, 0x75, 0x85, 0x66, 0x71, 0x8d, 0x8d, 0xc2, 0x45, 0x8a, 0x08, 0xf8, 0x06, 0x28, 0x25, 0xa1,
	0xba, 0x32, 0x94, 0x93, 0x10, 0x12, 0xb0, 0xe4, 0xd1, 0x84, 0x07, 0x89, 0x48, 0xbd, 0xc6, 0x52,
	0x12, 0x7a, 0xea, 0x24, 0x5c, 0x2c, 0x57, 0x09, 0x9f, 0xba, 0x80, 0x2b, 0x79, 0x05, 0x2d, 0xf0,
	0xc8, 0x37, 0x68, 0xc7, 0x9b, 0x24, 0x2b, 0x6f, 0xae, 0xb6, 0x14, 0x19, 0xbe, 0xfb, 0x6c, 0x45,
	0x83, 0x02, 0xf6, 0x6a, 0x3f, 0x15, 0x7b, 0x1d, 0x54, 0x9f, 0x84, 0x41, 0xe2, 0x4d, 0x12, 0x75,
	0x49, 0x48, 0xc9, 0xee, 0x5f, 0x4b, 0xa8, 0xea, 0x72, 0x6f, 0x71, 0x6b, 0xa7, 0xcf, 0xbf, 0x6c,
	0xca, 0x1b, 0x2f, 0x9b, 0x8f, 0x51, 0x23, 0xeb, 0xba, 0x95, 0xd7, 0x77, 0xdd, 0x4c, 0x49, 0xc0,
	0x6a, 0x32, 0xe1, 0x71, 0x2c, 0x9e, 0x6b, 0x55, 0x05, 0xab, 0x8c, 0x43, 0xfe, 0x13, 0xd5, 0xe5,
	0xb0, 0x4f, 0xbb, 0x38, 0x29, 0xbc, 0x3d, 0x85, 0x88, 0xa5, 0x2a, 0x77, 0x3d, 0xac, 0xba, 0xbf,
	0x2a, 0xa1, 0x9a, 0xd4, 0xdf, 0xd8, 0xb4, 0xf4, 0xca, 0xa6, 0x6f, 0x7a, 0xf7, 0x3d, 0x44, 0xb5,
	0x65, 0xe8, 0x07, 0x49, 0xac, 0xb2, 0xaa, 0xa8, 0xf5, 0xdb, 0x4d, 0xbb, 0xfb, 0xed, 0xd6, 0xfd,
	0x02, 0x69, 0x63, 0x31, 0x49, 0xf2, 0xf1, 0x2a, 0xbd, 0x45, 0xbc, 0xba, 0x43, 0xa4, 0x89, 0x95,
	0x36, 0xdf, 0xed, 0xe4, 0xbf, 0x51, 0x9d, 0xbf, 0x5c, 0xfa, 0x11, 0x8f, 0xdf, 0xe2, 0xe1, 0x9d,
	0xaa, 0x76, 0xff, 0x54, 0x42, 0x0d, 0x67, 0xc2, 0x03, 0x2f, 0xf2, 0x43, 0x28, 0xb3, 0x38, 0xf1,
	0xa2, 0x44, 0x3c, 0x29, 0x4b, 0x6f, 0x2e, 0xb3, 0x4c, 0x99, 0x7c, 0x86, 0x34, 0x78, 0xf8, 0xc2,
	0xd6, 0x70, 0x86, 0x02, 0x06, 0xd3, 0xe5, 0x0f, 0x01, 0x50, 0xb1, 0x11, 0x24, 0xd1, 0x0d, 0x93,
	0xda, 0x8f, 0xbe, 0x45, 0x68, 0xcd, 0x84, 0x87, 0xe4, 0x0b, 0x7e, 0xa3, 0x8e, 0x04, 0x9f, 0x30,
	0x8f, 0xe5, 0x2f, 0x1a, 0xb7, 0x34, 0x60, 0x30, 0x54, 0xbf, 0x71, 0x7c, 0x55, 0xfe, 0xa2, 0xd4,
	0xfd, 0x63, 0x19, 0x55, 0xa1, 0x9b, 0xc3, 0x4b, 0x31, 0x56, 0x5b, 0xaa, 0x43, 0xdc, 0xbf, 0xcd,
	0x1d, 0x96, 0x69, 0x41, 0xba, 0xa1, 0xdd, 0xdb, 0xab, 0xc5, 0x25, 0x8f, 0x54, 0x71, 0xe7, 0x38,
	0x90, 0xee, 0xc4, 0xbb, 0x9c, 0xf3, 0xef, 0x54, 0x8d, 0x2b, 0x2a, 0xe3, 0x9f, 0xa7, 0x30, 0x90,
	0x54, 0xe1, 0x65, 0xae, 0xfd, 0x84, 0x1f, 0x41, 0xf6, 0x51, 0xcb, 0x9b, 0x2e, 0xfc, 0x80, 0x0a,
	0x24, 0x2a, 0x00, 0xe7, 0x59, 0x59, 0x39, 0xd6, 0x73, 0xe5, 0x98, 0xfd, 0x36, 0xd3, 0x78, 0xc3,
	0x6f, 0x33, 0xfb, 0xa8, 0x25, 0x1c, 0xb4, 0xbc, 0x9b, 0x70, 0x95, 0xa8, 0x16, 0x9e, 0x67, 0x1d,
	0x98, 0xa8, 0x42, 0xa3, 0x05, 0x69, 0xa1, 0xba, 0x33, 0x3e, 0x3d, 0x1d, 0x31, 0x17, 0x6f, 0x91,
	0x6d, 0xd4, 0x30, 0xed, 0x3e, 0xb5, 0x5d, 0x76, 0x8e, 0x4b, 0x20, 0xea, 0xd1, 0x33, 0x6a, 0xb1,
	0x73, 0x5c, 0x26, 0x3b, 0xa8, 0x49, 0x99, 0x6b, 0x5a, 0x96, 0xc1, 0xce, 0x71, 0x45, 0xc8, 0x46,
	0xc3, 0x21, 0xb5, 0x75, 0x5c, 0x3d, 0xf8, 0x5d, 0x05, 0x35, 0xd2, 0x47, 0x39, 0xc1, 0x68, 0x5b,
	0x2d, 0x78, 0x31, 0xb6, 0x4d, 0x58, 0xf5, 0x1e, 0xda, 0x49, 0x57, 0xbd, 0xb0, 0x4c, 0xdb, 0xc0,
	0x25, 0x42, 0x50, 0x3b, 0xc7, 0x1a, 0x9c, 0xb8, 0xb8, 0x4c, 0x1e, 0x22, 0x92, 0xf1, 0x06, 0xcc,
	0xb0, 0xa9, 0x6e, 0x1a, 0x0c, 0x57, 0x0a, 0x7c, 0x93, 0x31, 0x63, 0x30, 0xb6, 0x28, 0xc3, 0x55,
	0xb2, 0x87, 0x76, 0x33, 0x3e, 0x33, 0xfb, 0x96, 0xe1, 0x60, 0x0d, 0xf6, 0x52, 0x3e, 0xab, 0x75,
	0x6b, 0xb0, 0x57, 0xca, 0x3a, 0x19, 0x3b, 0x0e, 0x65, 0xb8, 0x0e, 0xb6, 0x29, 0x4f, 0x67, 0x74,
	0x30, 0x1a, 0xd9, 0xb8, 0x01, 0x1b, 0xa5, 0xcc, 0xde, 0xd8, 0x64, 0xd4, 0x71, 0xc0, 0x81, 0x66,
	0x5e, 0xb9, 0x37, 0x72, 0x1c, 0xda, 0x7b, 0x8a, 0x51, 0x7e, 0xa3, 0x13, 0x83, 0x9e, 0x9d, 0xe3,
	0x56, 0x7e, 0xa3, 0xa1, 0xa1, 0x9b, 0xe3, 0x21, 0xde, 0xce, 0xf3, 0x2c, 0x6a, 0xf7, 0x0c, 0x86,
	0x77, 0x20, 0x42, 0x59, 0x28, 0x2f, 0x8e, 0x6d, 0xdc, 0x86, 0x1d, 0xd6, 0x1c, 0xe9, 0xf7, 0x2e,
	0xb9, 0x8f, 0xf0, 0x9a, 0xa9, 0x16, 0xc4, 0x45, 0x55, 0xb9, 0xf3, 0xbd, 0x0d, 0xe6, 0x88, 0x39,
	0x06, 0x26, 0xe4, 0x5d, 0xf4, 0x60, 0x63, 0x51, 0x25, 0xda, 0x3b, 0xe0, 0xa8, 0x99, 0x5d, 0x1a,
	0x21, 0xe9, 0x3d, 0xf3, 0xcc, 0xb4, 0x4c, 0x6a, 0xe3, 0x2d, 0x48, 0xec, 0xd0, 0xb4, 0x4c, 0xd7,
	0xa4, 0xb8, 0x04, 0x49, 0xef, 0x8d, 0x6c, 0xa7, 0xc7, 0xcc, 0x53, 0xc8, 0x50, 0x0b, 0xd5, 0xd3,
	0xf0, 0x0b, 0x04, 0x9c, 0x19, 0xae, 0xc1, 0xa8, 0x8d, 0xab, 0xa4, 0x89, 0x34, 0xc3, 0x32, 0x5d,
	0x03, 0x6b, 0xf0, 0x39, 0x18, 0x53, 0xa6, 0xe3, 0xda, 0xc1, 0xcf, 0x51, 0x2b, 0xf7, 0xfc, 0x95,
	0xe6, 0x8e, 0x6b, 0xda, 0x03, 0xbc, 0x45, 0x1a, 0xa8, 0x3a, 0x18, 0x8d, 0x74, 0x5c, 0x82, 0xfd,
	0xc7, 0x76, 0x7f, 0xc4, 0x86, 0x86, 0xae, 0xf6, 0xa0, 0xae, 0x6b, 0x19, 0x3a, 0xae, 0x10, 0x84,
	0x6a, 0xce, 0x09, 0x7d, 0x6a, 0xc0, 0x16, 0xbb, 0xa8, 0xa5, 0x1b, 0xc3, 0x11, 0xa3, 0x96, 0xe9,
	0x18, 0x3a, 0xd6, 0x0e, 0x7e, 0x59, 0x42, 0xcd, 0xec, 0x51, 0xae, 0x16, 0x37, 0xd8, 0x99, 0x81,
	0xb7, 0x20, 0xc2, 0x43, 0xca, 0x7a, 0x27, 0x17, 0xbd, 0x91, 0x35, 0x1e, 0xda, 0xb8, 0x04, 0xe9,
	0xa2, 0xae, 0x4b, 0x7b, 0x4f, 0x53, 0x56, 0x19, 0x3c, 0x10, 0x68, 0x14, 0x47, 0x31, 0x7a, 0x27,
	0x86, 0x35, 0x82, 0x7d, 0xee, 0x23, 0xac, 0xf0, 0x6b, 0xda, 0x03, 0x81, 0x57, 0xc0, 0x55, 0x0b,
	0xd5, 0x75, 0xe3, 0x98, 0xda, 0xba, 0x81, 0x6b, 0x10, 0x96, 0x3e, 0xc8, 0xfb, 0xa6, 0xa1, 0xe3,
	0xfa, 0xc1, 0x1f, 0x4a, 0xa8, 0x0a, 0xef, 0x11, 0xe0, 0x1f, 0xc3, 0x2e, 0x96, 0x39, 0x52, 0xa1,
	0x3c, 0x66, 0xe6, 0x80, 0xea, 0x86, 0x3c, 0xa5, 0x6e, 0x9e, 0x99, 0x0e, 0x88, 0xca, 0x10, 0xa4,
	0xde, 0x88, 0x9d, 0x3a, 0xb8, 0x02, 0x6e, 0x3c, 0x83, 0x90, 0x54, 0xe1, 0x8b, 0xb2, 0xe1, 0x39,
	0xd6, 0x20, 0x9f, 0x36, 0x75, 0xcd, 0x91, 0x4d, 0xad, 0x0b, 0xcb, 0xa0, 0xba, 0xc1, 0x70, 0x4d,
	0x1c, 0x21, 0xcb, 0xa7, 0x6e, 0x9e, 0xe1, 0x3a, 0xc4, 0x24, 0x45, 0xd7, 0xb1, 0x6e, 0xe0, 0x46,
	0x9e, 0x01, 0x1a, 0x4d, 0xe1, 0x03, 0x75, 0x5d, 0x28, 0x5a, 0x04, 0x3e, 0x0c, 0xc6, 0xf6, 0xc5,
	0x29, 0x65, 0x4f, 0x71, 0xeb, 0x60, 0x80, 0xda, 0xc5, 0x1f, 0xb2, 0xc0, 0x81, 0xd3, 0xd1, 0x88,
	0xc9, 0x46, 0x40, 0x75, 0xe3, 0xff, 0xc7, 0xd4, 0x05, 0xdf, 0xdb, 0x08, 0xf5, 0x18, 0xc4, 0xce,
	0x39, 0x19, 0xb9, 0xb2, 0x17, 0x18, 0xdf, 0xf5, 0x0c, 0xcb, 0x32, 0x6c, 0x17, 0x57, 0x0e, 0x9e,
	0xa2, 0x9d, 0xc2, 0x33, 0x0e, 0x36, 0x1d, 0x3b, 0x86, 0x65, 0x38, 0x0e, 0xde, 0x12, 0xc6, 0xe3,
	0xe1, 0xb1, 0xc1, 0x9c, 0xd1, 0x50, 0x2d, 0xd6, 0x1f, 0xdb, 0x3d, 0x79, 0x3a, 0xb5, 0x58, 0xbf,
	0x6f, 0xf6, 0x4c, 0xb9, 0xd8, 0xcf, 0x90, 0x26, 0x6e, 0x91, 0x29, 0x5a, 0xe8, 0x00, 0x12, 0xda,
	0x44, 0x9a, 0x48, 0x28, 0x2e, 0x81, 0x93, 0xc3, 0xd1, 0x99, 0x81, 0xcb, 0x80, 0x0e, 0xdd, 0xe8,
	0x1b, 0x36, 0x20, 0x65, 0x1b, 0x35, 0x9e, 0x99, 0xee, 0x89, 0xce, 0xe8, 0x33, 0x5c, 0x05, 0x89,
	0xcc, 0xb6, 0xc4, 0x23, 0xa3, 0x96, 0x75, 0x8e, 0x6b, 0x07, 0xbf, 0x2f, 0xa3, 0x56, 0xee, 0x85,
	0x05, 0xae, 0x50, 0xfb, 0xfc, 0x42, 0x86, 0x1a, 0x6f, 0x81, 0x59, 0x9f, 0x19, 0xb6, 0xd8, 0x46,
	0x26, 0xcf, 0x35, 0x9d, 0x13, 0x05, 0xca, 0xb1, 0xe3, 0x40, 0x85, 0x88, 0xad, 0x4e, 0x53, 0xaa,
	0x2a, 0xfa, 0xe7, 0x29, 0xb5, 0x41, 0xaf, 0x06, 0xc4, 0xc8, 0x75, 0x47, 0x43, 0x6a, 0xe3, 0x3a,
	0x10, 0xa7, 0x06, 0x13, 0x6a, 0x0d, 0x11, 0xd0, 0xb1, 0xe3, 0x32, 0xa0, 0x9a, 0x82, 0x1a, 0x1a,
	0xcc, 0xec, 0x51, 0x1b, 0x23, 0xd8, 0xd6, 0xb4, 0x75, 0x90, 0xb4, 0xc0, 0xc8, 0x04, 0x00, 0x51,
	0x1b, 0x6f, 0x83, 0xda, 0x31, 0x3d, 0xa3, 0xc2, 0x68, 0x07, 0x0e, 0xa2, 0x8f, 0xdd, 0xde, 0x09,
	0x6e, 0x0b, 0xe7, 0x0c, 0x6b, 0x00, 0xfc, 0x5d, 0x30, 0xb7, 0xa9, 0xe3, 0xd0, 0x31, 0xc6, 0xa0,
	0xe3, 0x3c, 0x33, 0x1d, 0x07, 0xdf, 0x83, 0x1a, 0x38, 0xa5, 0xa7, 0xd4, 0xba, 0x70, 0x5c, 0xea,
	0x1a, 0x0e, 0x26, 0x60, 0x45, 0xfb, 0x72, 0xd3, 0x3d, 0x69, 0xe5, 0x9a, 0x67, 0x06, 0xbe, 0x2f,
	0x3a, 0xc0, 0xc8, 0x1a, 0xd9, 0x26, 0xb5, 0xf0, 0x03, 0x51, 0x74, 0xcf, 0x0c, 0xdd, 0xb0, 0xf1,
	0xc3, 0x83, 0x03, 0xa4, 0x89, 0x07, 0x23, 0x30, 0xa1, 0x14, 0x28, 0x93, 0x61, 0x1a, 0x52, 0x07,
	0x8a, 0xb0, 0x24, 0xa3, 0x7b, 0x6a, 0xea, 0xb8, 0x7c, 0xf0, 0x0d, 0xda, 0xbb, 0xe5, 0x0a, 0x0a,
	0xf9, 0x62, 0xd2, 0x0e, 0x0a, 0xce, 0xe8, 0xbb, 0xb8, 0x04, 0x2b, 0xf4, 0x0c, 0xdb, 0x65, 0x86,
	0x2c, 0x05, 0x26, 0x3a, 0x5e, 0xe5, 0xe0, 0xd7, 0x25, 0xa4, 0x89, 0x29, 0x26, 0x62, 0xc7, 0x8c,
	0x01, 0x1d, 0x1a, 0xb2, 0x8e, 0x64, 0x11, 0x38, 0xb2, 0x25, 0x41, 0xfa, 0x87, 0x86, 0xed, 0x3e,
	0x91, 0x99, 0xe9, 0x9b, 0xcc, 0xb4, 0x07, 0x4f, 0x64, 0x66, 0x44, 0x20, 0x2c, 0xf7, 0x89, 0x04,
	0x01, 0x24, 0xa6, 0xf7, 0x04, 0x6b, 0x79, 0xab, 0x23, 0x99, 0x27, 0x69, 0x75, 0x84, 0xeb, 0x39,
	0xab, 0x23, 0xdc, 0xc8, 0xac, 0x8e, 0x70, 0xf3, 0xe8, 0x2f, 0x65, 0xd4, 0x12, 0x8f, 0x46, 0x1e,
	0x5d, 0xfb, 0x13, 0x4e, 0xbe, 0x46, 0x55, 0x63, 0x72, 0x15, 0x92, 0xc2, 0x2f, 0x18, 0x85, 0xff,
	0x65, 0x1e, 0xbd, 0x5e, 0xd4, 0xdd, 0x22, 0xdf, 0xa0, 0xfa, 0x19, 0x8f, 0x62, 0x71, 0x1d, 0xcf,
	0xeb, 0xe5, 0xff, 0xb3, 0xb9, 0x7b, 0x85, 0xaf, 0x91, 0x26, 0xfe, 0xcf, 0x28, 0xda, 0xe7, 0xff,
	0x2f, 0x29, 0xda, 0x17, 0xfe, 0xfc, 0xe8, 0x6e, 0x11, 0x1d, 0x35, 0xd2, 0xff, 0x7b, 0x8a, 0x4b,
	0xe4, 0xff, 0x26, 0x7a, 0x54, 0x78, 0x84, 0x6f, 0xfe, 0x3f, 0xd4, 0xdd, 0x22, 0x5f, 0xa2, 0xc6,
	0x80, 0x27, 0xf2, 0x52, 0xfb, 0xfa, 0x55, 0xee, 0x6d, 0xfe, 0x46, 0x11, 0x77, 0xb7, 0x2e, 0x6b,
	0xe2, 0x52, 0xf4, 0xe9, 0x3f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xd7, 0xdc, 0x76, 0xad, 0x10, 0x1b,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GameServiceClient is the client API for GameService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GameServiceClient interface {
	Echo(ctx context.Context, in *StringMessage, opts ...grpc.CallOption) (*StringMessage, error)
	Version(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*StringMessage, error)
	Login(ctx context.Context, in *LoginMessage, opts ...grpc.CallOption) (*LoginResponse, error)
	GameTime(ctx context.Context, in *TokenMessage, opts ...grpc.CallOption) (*GameTimeResponse, error)
	GetUnits(ctx context.Context, in *TokenMessage, opts ...grpc.CallOption) (*Units, error)
}

type gameServiceClient struct {
	cc *grpc.ClientConn
}

func NewGameServiceClient(cc *grpc.ClientConn) GameServiceClient {
	return &gameServiceClient{cc}
}

func (c *gameServiceClient) Echo(ctx context.Context, in *StringMessage, opts ...grpc.CallOption) (*StringMessage, error) {
	out := new(StringMessage)
	err := c.cc.Invoke(ctx, "/republique.GameService/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameServiceClient) Version(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*StringMessage, error) {
	out := new(StringMessage)
	err := c.cc.Invoke(ctx, "/republique.GameService/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameServiceClient) Login(ctx context.Context, in *LoginMessage, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/republique.GameService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameServiceClient) GameTime(ctx context.Context, in *TokenMessage, opts ...grpc.CallOption) (*GameTimeResponse, error) {
	out := new(GameTimeResponse)
	err := c.cc.Invoke(ctx, "/republique.GameService/GameTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameServiceClient) GetUnits(ctx context.Context, in *TokenMessage, opts ...grpc.CallOption) (*Units, error) {
	out := new(Units)
	err := c.cc.Invoke(ctx, "/republique.GameService/GetUnits", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GameServiceServer is the server API for GameService service.
type GameServiceServer interface {
	Echo(context.Context, *StringMessage) (*StringMessage, error)
	Version(context.Context, *EmptyMessage) (*StringMessage, error)
	Login(context.Context, *LoginMessage) (*LoginResponse, error)
	GameTime(context.Context, *TokenMessage) (*GameTimeResponse, error)
	GetUnits(context.Context, *TokenMessage) (*Units, error)
}

// UnimplementedGameServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGameServiceServer struct {
}

func (*UnimplementedGameServiceServer) Echo(ctx context.Context, req *StringMessage) (*StringMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Echo not implemented")
}
func (*UnimplementedGameServiceServer) Version(ctx context.Context, req *EmptyMessage) (*StringMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Version not implemented")
}
func (*UnimplementedGameServiceServer) Login(ctx context.Context, req *LoginMessage) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedGameServiceServer) GameTime(ctx context.Context, req *TokenMessage) (*GameTimeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GameTime not implemented")
}
func (*UnimplementedGameServiceServer) GetUnits(ctx context.Context, req *TokenMessage) (*Units, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUnits not implemented")
}

func RegisterGameServiceServer(s *grpc.Server, srv GameServiceServer) {
	s.RegisterService(&_GameService_serviceDesc, srv)
}

func _GameService_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StringMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServiceServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/republique.GameService/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServiceServer).Echo(ctx, req.(*StringMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameService_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServiceServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/republique.GameService/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServiceServer).Version(ctx, req.(*EmptyMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/republique.GameService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServiceServer).Login(ctx, req.(*LoginMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameService_GameTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServiceServer).GameTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/republique.GameService/GameTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServiceServer).GameTime(ctx, req.(*TokenMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameService_GetUnits_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServiceServer).GetUnits(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/republique.GameService/GetUnits",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServiceServer).GetUnits(ctx, req.(*TokenMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _GameService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "republique.GameService",
	HandlerType: (*GameServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _GameService_Echo_Handler,
		},
		{
			MethodName: "Version",
			Handler:    _GameService_Version_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _GameService_Login_Handler,
		},
		{
			MethodName: "GameTime",
			Handler:    _GameService_GameTime_Handler,
		},
		{
			MethodName: "GetUnits",
			Handler:    _GameService_GetUnits_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "republique.proto",
}
